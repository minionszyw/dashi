version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    container_name: dashi_postgres_dev
    environment:
      POSTGRES_DB: dashi
      POSTGRES_USER: dashi
      POSTGRES_PASSWORD: dashi123
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - dashi_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U dashi"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    container_name: dashi_redis_dev
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - dashi_network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 5

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: dashi_backend_dev
    ports:
      - "8000:8000"
    env_file:
      - ./backend/.env
    volumes:
      - ./backend:/app
      - /app/venv  # 避免覆盖虚拟环境
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - dashi_network
    command: uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload

volumes:
  postgres_data:
  redis_data:

networks:
  dashi_network:
    driver: bridge

